echo "Exporting project information..."
export PROJECT_ID=$(gcloud config get-value project)

echo "Creating a Cloud Storage bucket..."
export PROJECT_NUMBER=$(gcloud projects describe ${PROJECT_ID} \
    --format="value(projectNumber)")

export BUCKET=$GOOGLE_CLOUD_PROJECT
gcloud storage buckets create gs://$BUCKET

echo "Adding IAM policy bindings..."
gcloud projects add-iam-policy-binding $PROJECT_ID \
    --member="serviceAccount:$PROJECT_NUMBER-compute@developer.gserviceaccount.com" \
    --role="roles/datafusion.serviceAgent"

gcloud projects add-iam-policy-binding $PROJECT_ID \
  --member="serviceAccount:service-$PROJECT_NUMBER@gcp-sa-datafusion.iam.gserviceaccount.com" \
  --role="roles/dlp.admin"

echo "Creating JSON file for the inspect template..."
cat > new-inspect-file.json <<EOF
{
  "inspectTemplate": {
    "displayName": "hii",
    "inspectConfig": {
      "infoTypes": [
        {
          "name": "PHONE_NUMBER"
        },
        {
          "name": "EMAIL_ADDRESS"
        }
      ],
      "minLikelihood": "POSSIBLE",
      "limits": {}
    }
  }
}
EOF

echo "Creating an inspect template in Google DLP..."
curl -X POST \
  -H "Authorization: Bearer $(gcloud auth application-default print-access-token)" \
  -H "Content-Type: application/json" \
  https://dlp.googleapis.com/v2/projects/$PROJECT_ID/locations/global/inspectTemplates \
  -d @new-inspect-file.json

echo

cd

remove_files() {
    for file in *; do
        if [[ "$file" == gsp* || "$file" == arc* || "$file" == shell* ]]; then
            if [[ -f "$file" ]]; then
                rm "$file"
                echo "File removed: $file"
            fi
        fi
    done
}

remove_files
